//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmazFit_Watchface_2.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class FormStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FormStrings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AmazFit_Watchface_2.Properties.FormStrings", typeof(FormStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Активность.
        /// </summary>
        public static string ActivityName_ActivityGoal {
            get {
                return ResourceManager.GetString("ActivityName_ActivityGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Давление.
        /// </summary>
        public static string ActivityName_AirPressure {
            get {
                return ResourceManager.GetString("ActivityName_AirPressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Качество воздуха.
        /// </summary>
        public static string ActivityName_AirQuality {
            get {
                return ResourceManager.GetString("ActivityName_AirQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Высота.
        /// </summary>
        public static string ActivityName_Altitude {
            get {
                return ResourceManager.GetString("ActivityName_Altitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Батарея.
        /// </summary>
        public static string ActivityName_Battery {
            get {
                return ResourceManager.GetString("ActivityName_Battery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Калории.
        /// </summary>
        public static string ActivityName_Calories {
            get {
                return ResourceManager.GetString("ActivityName_Calories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь.
        /// </summary>
        public static string ActivityName_Distance {
            get {
                return ResourceManager.GetString("ActivityName_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Жиросжигание.
        /// </summary>
        public static string ActivityName_FatBurning {
            get {
                return ResourceManager.GetString("ActivityName_FatBurning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пульс.
        /// </summary>
        public static string ActivityName_HeartRate {
            get {
                return ResourceManager.GetString("ActivityName_HeartRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Влажность.
        /// </summary>
        public static string ActivityName_Humidity {
            get {
                return ResourceManager.GetString("ActivityName_Humidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PAI.
        /// </summary>
        public static string ActivityName_PAI {
            get {
                return ResourceManager.GetString("ActivityName_PAI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Разминка.
        /// </summary>
        public static string ActivityName_StandUp {
            get {
                return ResourceManager.GetString("ActivityName_StandUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Шаги.
        /// </summary>
        public static string ActivityName_Steps {
            get {
                return ResourceManager.GetString("ActivityName_Steps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Уровень стресса.
        /// </summary>
        public static string ActivityName_Stress {
            get {
                return ResourceManager.GetString("ActivityName_Stress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Восход.
        /// </summary>
        public static string ActivityName_Sunrise {
            get {
                return ResourceManager.GetString("ActivityName_Sunrise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на УФ индекс.
        /// </summary>
        public static string ActivityName_UVindex {
            get {
                return ResourceManager.GetString("ActivityName_UVindex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Погода.
        /// </summary>
        public static string ActivityName_Weather {
            get {
                return ResourceManager.GetString("ActivityName_Weather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ветер.
        /// </summary>
        public static string ActivityName_WindForce {
            get {
                return ResourceManager.GetString("ActivityName_WindForce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на День.
        /// </summary>
        public static string DateName_Day {
            get {
                return ResourceManager.GetString("DateName_Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Месяц.
        /// </summary>
        public static string DateName_Month {
            get {
                return ResourceManager.GetString("DateName_Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Год.
        /// </summary>
        public static string DateName_Year {
            get {
                return ResourceManager.GetString("DateName_Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбор файлов изображений.
        /// </summary>
        public static string Dialog_Title_Image {
            get {
                return ResourceManager.GetString("Dialog_Title_Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбор файла настроек циферблата.
        /// </summary>
        public static string Dialog_Title_Pack {
            get {
                return ResourceManager.GetString("Dialog_Title_Pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь к файлу упаковщика.
        /// </summary>
        public static string Dialog_Title_PackUnpack {
            get {
                return ResourceManager.GetString("Dialog_Title_PackUnpack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбор файла настроек предпросмотра.
        /// </summary>
        public static string Dialog_Title_PreviewStates {
            get {
                return ResourceManager.GetString("Dialog_Title_PreviewStates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранить анимированный предпросмотр.
        /// </summary>
        public static string Dialog_Title_SaveGIF {
            get {
                return ResourceManager.GetString("Dialog_Title_SaveGIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранить предпросмотр.
        /// </summary>
        public static string Dialog_Title_SavePNG {
            get {
                return ResourceManager.GetString("Dialog_Title_SavePNG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбор файла циферблата.
        /// </summary>
        public static string Dialog_Title_Unpack {
            get {
                return ResourceManager.GetString("Dialog_Title_Unpack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбор файла изображения часов.
        /// </summary>
        public static string Dialog_Title_WatchSkin {
            get {
                return ResourceManager.GetString("Dialog_Title_WatchSkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на \Manual\readme.chm.
        /// </summary>
        public static string File_ReadMy {
            get {
                return ResourceManager.GetString("File_ReadMy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на quick_guide.htm.
        /// </summary>
        public static string File_ReadMy_Start {
            get {
                return ResourceManager.GetString("File_ReadMy_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Бинарные файлы (*.bin)|*.bin.
        /// </summary>
        public static string FilterBin {
            get {
                return ResourceManager.GetString("FilterBin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GIF файлы (*.gif)|*.gif.
        /// </summary>
        public static string FilterGif {
            get {
                return ResourceManager.GetString("FilterGif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Json файлы (*.json) | *.json.
        /// </summary>
        public static string FilterJson {
            get {
                return ResourceManager.GetString("FilterJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PNG файлы (*.png)|*.png.
        /// </summary>
        public static string FilterPng {
            get {
                return ResourceManager.GetString("FilterPng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Предпросмотр.
        /// </summary>
        public static string Form_Preview {
            get {
                return ResourceManager.GetString("Form_Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Предпросмотр [X=.
        /// </summary>
        public static string Form_PreviewX {
            get {
                return ResourceManager.GetString("Form_PreviewX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Большой размер файла.
        /// </summary>
        public static string Message_bigFile_Caption {
            get {
                return ResourceManager.GetString("Message_bigFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Размер несжатого файла превышает 1,95МБ..
        /// </summary>
        public static string Message_bigFile_Text1_gtr47 {
            get {
                return ResourceManager.GetString("Message_bigFile_Text1_gtr47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Размер несжатого файла превышает 1,5МБ..
        /// </summary>
        public static string Message_bigFile_Text1_gts {
            get {
                return ResourceManager.GetString("Message_bigFile_Text1_gts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Размер несжатого файла превышает 5,5МБ..
        /// </summary>
        public static string Message_bigFile_Text1_trex {
            get {
                return ResourceManager.GetString("Message_bigFile_Text1_trex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Циферблат может не работать..
        /// </summary>
        public static string Message_bigFile_Text2 {
            get {
                return ResourceManager.GetString("Message_bigFile_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новый циферблат создан..
        /// </summary>
        public static string Message_ConvertingCompleted_Text {
            get {
                return ResourceManager.GetString("Message_ConvertingCompleted_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Координаты скопированны.
        /// </summary>
        public static string Message_CopyCoord {
            get {
                return ResourceManager.GetString("Message_CopyCoord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка.
        /// </summary>
        public static string Message_Error_Caption {
            get {
                return ResourceManager.GetString("Message_Error_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Невозможно открыть изображение: .
        /// </summary>
        public static string Message_error_Image_Text1 {
            get {
                return ResourceManager.GetString("Message_error_Image_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на . У Вас нет прав на чтение файла, или изображение повреждено..
        /// </summary>
        public static string Message_error_Image_Text2 {
            get {
                return ResourceManager.GetString("Message_error_Image_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Файл не найден.
        /// </summary>
        public static string Message_error_pack_unpack_dir_Caption {
            get {
                return ResourceManager.GetString("Message_error_pack_unpack_dir_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь [.
        /// </summary>
        public static string Message_error_pack_unpack_dir_Text1 {
            get {
                return ResourceManager.GetString("Message_error_pack_unpack_dir_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ] к утилите распаковки/запаковки указан неверно..
        /// </summary>
        public static string Message_error_pack_unpack_dir_Text2 {
            get {
                return ResourceManager.GetString("Message_error_pack_unpack_dir_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Укажите верный путь к утилите распаковки/запаковки..
        /// </summary>
        public static string Message_error_pack_unpack_dir_Text3 {
            get {
                return ResourceManager.GetString("Message_error_pack_unpack_dir_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отсутствуют необходимые компоненты программы..
        /// </summary>
        public static string Message_error_respackerPath_Text1 {
            get {
                return ResourceManager.GetString("Message_error_respackerPath_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не найдена утилита сжатия bin файлов по пути [.
        /// </summary>
        public static string Message_error_respackerPath_Text2 {
            get {
                return ResourceManager.GetString("Message_error_respackerPath_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверьте наличие утилиты сжатия bin файлов..
        /// </summary>
        public static string Message_error_respackerPath_Text3 {
            get {
                return ResourceManager.GetString("Message_error_respackerPath_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь к программе не должен содержать пробелы. Желательно поместить программу в корень диска..
        /// </summary>
        public static string Message_Error_SpaceInProgrammName_Text {
            get {
                return ResourceManager.GetString("Message_Error_SpaceInProgrammName_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Некоторые изображения могут вызывать ошибки (.
        /// </summary>
        public static string Message_ErrorImage_Text1 {
            get {
                return ResourceManager.GetString("Message_ErrorImage_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попробовать их исправить?.
        /// </summary>
        public static string Message_ErrorImage_Text2 {
            get {
                return ResourceManager.GetString("Message_ErrorImage_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перейти к файлу.
        /// </summary>
        public static string Message_GoToFile_Caption {
            get {
                return ResourceManager.GetString("Message_GoToFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перейти к файлу?.
        /// </summary>
        public static string Message_GoToFile_Text {
            get {
                return ResourceManager.GetString("Message_GoToFile_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Информация.
        /// </summary>
        public static string Message_Information_Caption {
            get {
                return ResourceManager.GetString("Message_Information_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверный JSON файл..
        /// </summary>
        public static string Message_JsonError_Text {
            get {
                return ResourceManager.GetString("Message_JsonError_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка чтения JSON файла..
        /// </summary>
        public static string Message_JsonReadError_Text {
            get {
                return ResourceManager.GetString("Message_JsonReadError_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Загрузка настроек предпросмотра.
        /// </summary>
        public static string Message_LoadPreviewStates_Caption {
            get {
                return ResourceManager.GetString("Message_LoadPreviewStates_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Загрузить имеющийся файл с набором параметров предпросмотра PreviewStates.json?.
        /// </summary>
        public static string Message_LoadPreviewStates_Text {
            get {
                return ResourceManager.GetString("Message_LoadPreviewStates_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открытие проекта.
        /// </summary>
        public static string Message_openProject_Caption {
            get {
                return ResourceManager.GetString("Message_openProject_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открыть распакованный проект?.
        /// </summary>
        public static string Message_openProject_Text {
            get {
                return ResourceManager.GetString("Message_openProject_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нумерация PNG файлов должна начинаться с 1..
        /// </summary>
        public static string Message_PNGFromOne_Text {
            get {
                return ResourceManager.GetString("Message_PNGFromOne_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PNG файлы идут не по порядку или часть файлов отсутствует..
        /// </summary>
        public static string Message_PNGmissing_Text1 {
            get {
                return ResourceManager.GetString("Message_PNGmissing_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Присвойте имена PNG файлам в порядке возрастания..
        /// </summary>
        public static string Message_PNGmissing_Text2 {
            get {
                return ResourceManager.GetString("Message_PNGmissing_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перезагрузка.
        /// </summary>
        public static string Message_Restart_Caption {
            get {
                return ResourceManager.GetString("Message_Restart_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для применения настроек необходимо перезагрузить программу..
        /// </summary>
        public static string Message_Restart_Text1 {
            get {
                return ResourceManager.GetString("Message_Restart_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перезапустить программу?.
        /// </summary>
        public static string Message_Restart_Text2 {
            get {
                return ResourceManager.GetString("Message_Restart_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранение проекта.
        /// </summary>
        public static string Message_Save_JSON_Modified_Caption {
            get {
                return ResourceManager.GetString("Message_Save_JSON_Modified_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы хотите сохранить изменения в проекте .
        /// </summary>
        public static string Message_Save_JSON_Modified_Text1 {
            get {
                return ResourceManager.GetString("Message_Save_JSON_Modified_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ?.
        /// </summary>
        public static string Message_Save_JSON_Modified_Text2 {
            get {
                return ResourceManager.GetString("Message_Save_JSON_Modified_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текущий проект еще не сохранен. Вы хотите сохранить его?.
        /// </summary>
        public static string Message_Save_new_JSON {
            get {
                return ResourceManager.GetString("Message_Save_new_JSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для сохранения предустановленных параметром установите хотябы в одном поле &quot;Калории&quot; значение отличное от &quot;1234&quot;..
        /// </summary>
        public static string Message_SaveOnly1234_Text {
            get {
                return ResourceManager.GetString("Message_SaveOnly1234_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Добавлена первая редактируемая зона..
        /// </summary>
        public static string Message_Warning_Add_FirstWidget1 {
            get {
                return ResourceManager.GetString("Message_Warning_Add_FirstWidget1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не забудьте настроить верхнюю и нижнюю маски на экране редактирования..
        /// </summary>
        public static string Message_Warning_Add_FirstWidget2 {
            get {
                return ResourceManager.GetString("Message_Warning_Add_FirstWidget2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройте все изображения необходимые для редактируемой зоны..
        /// </summary>
        public static string Message_Warning_Add_Widget {
            get {
                return ResourceManager.GetString("Message_Warning_Add_Widget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Добавьте данные для отображения в редактируемой зоне..
        /// </summary>
        public static string Message_Warning_AddData_WidgetElement {
            get {
                return ResourceManager.GetString("Message_Warning_AddData_WidgetElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Добавьте изображение предпросмотра для выбранного элемента..
        /// </summary>
        public static string Message_Warning_AddPreview_WidgetElement {
            get {
                return ResourceManager.GetString("Message_Warning_AddPreview_WidgetElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Предупреждение.
        /// </summary>
        public static string Message_Warning_Caption {
            get {
                return ResourceManager.GetString("Message_Warning_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Информация.
        /// </summary>
        public static string Message_Warning_Information {
            get {
                return ResourceManager.GetString("Message_Warning_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для начала добавьте хотя бы одну редактируемую зону..
        /// </summary>
        public static string Message_Warning_No_Widget {
            get {
                return ResourceManager.GetString("Message_Warning_No_Widget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Если использовать не все три стрелки в аналоговых часах, то могут возникнуть проблемы..
        /// </summary>
        public static string Message_Warning3clockHand_Text {
            get {
                return ResourceManager.GetString("Message_Warning3clockHand_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Желательно указывать изображение для символа ошибки при отсутствии данных активностей..
        /// </summary>
        public static string Message_WarningActivityError {
            get {
                return ResourceManager.GetString("Message_WarningActivityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Количество элементов для анимации не может быть больше 4..
        /// </summary>
        public static string Message_WarningAnimationCoun_Text {
            get {
                return ResourceManager.GetString("Message_WarningAnimationCoun_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изображение для анимации не должно быть последним в списке изображений..
        /// </summary>
        public static string Message_WarningAnimationLastImage {
            get {
                return ResourceManager.GetString("Message_WarningAnimationLastImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не рекомендуется использовать больше 10 картинок для отображения заряда батареи..
        /// </summary>
        public static string Message_WarningBatteryCount_Text {
            get {
                return ResourceManager.GetString("Message_WarningBatteryCount_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не рекомендуется отображение в виде стрелочного индикатора совместно с отображением сегментами для одного элемента..
        /// </summary>
        public static string Message_WarningBatterySegment_Text {
            get {
                return ResourceManager.GetString("Message_WarningBatterySegment_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Каталог .
        /// </summary>
        public static string Message_WarningConverting_Text1 {
            get {
                return ResourceManager.GetString("Message_WarningConverting_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  уже существует. Заменить?.
        /// </summary>
        public static string Message_WarningConverting_Text2 {
            get {
                return ResourceManager.GetString("Message_WarningConverting_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не рекомендуется использовать отображение расстояния без суффикса..
        /// </summary>
        public static string Message_WarningDistanceSuffix {
            get {
                return ResourceManager.GetString("Message_WarningDistanceSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отображение номера месяца не работает вместе с отображением названия месяца..
        /// </summary>
        public static string Message_WarningMonthName {
            get {
                return ResourceManager.GetString("Message_WarningMonthName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не рекомендуется использовать минуты без использования часов для числового отображения времени..
        /// </summary>
        public static string Message_WarningOnlyMin_Text {
            get {
                return ResourceManager.GetString("Message_WarningOnlyMin_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не рекомендуется использовать секунды без использования часов и минут для числового отображения времени..
        /// </summary>
        public static string Message_WarningOnlySec_Text {
            get {
                return ResourceManager.GetString("Message_WarningOnlySec_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Размеры изображения для Preview отличаются от стандартных..
        /// </summary>
        public static string Message_WarningPreview_Text1 {
            get {
                return ResourceManager.GetString("Message_WarningPreview_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Использовать существующие размеры?.
        /// </summary>
        public static string Message_WarningPreview_Text2 {
            get {
                return ResourceManager.GetString("Message_WarningPreview_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Рекомендуется для отображения пульса использовать 6 сегментов..
        /// </summary>
        public static string Message_WarningPulseIconCount_Text {
            get {
                return ResourceManager.GetString("Message_WarningPulseIconCount_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя файла и путь к нему не должны содержать пробелов..
        /// </summary>
        public static string Message_WarningSpaceInName_Text {
            get {
                return ResourceManager.GetString("Message_WarningSpaceInName_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отображение текущей температуры может не работать без отображения дневной и ночной температуры..
        /// </summary>
        public static string Message_WarningTemperature_Text {
            get {
                return ResourceManager.GetString("Message_WarningTemperature_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Разные значения ImageIndex для десятков и единиц не поддерживаются..
        /// </summary>
        public static string Message_WarningTensOnes_Text {
            get {
                return ResourceManager.GetString("Message_WarningTensOnes_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возможно неверно указано изображение для символа ошибки при отсутствии данных текущей температуры..
        /// </summary>
        public static string Message_WarningWeatherError {
            get {
                return ResourceManager.GetString("Message_WarningWeatherError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Дата.
        /// </summary>
        public static string WidgeDescription_Date {
            get {
                return ResourceManager.GetString("WidgeDescription_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Активность.
        /// </summary>
        public static string WidgetName_ActivityGoal {
            get {
                return ResourceManager.GetString("WidgetName_ActivityGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Давление.
        /// </summary>
        public static string WidgetName_AirPressure {
            get {
                return ResourceManager.GetString("WidgetName_AirPressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Качество воздуха.
        /// </summary>
        public static string WidgetName_AirQuality {
            get {
                return ResourceManager.GetString("WidgetName_AirQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Высота.
        /// </summary>
        public static string WidgetName_Altitude {
            get {
                return ResourceManager.GetString("WidgetName_Altitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Батарея.
        /// </summary>
        public static string WidgetName_Battery {
            get {
                return ResourceManager.GetString("WidgetName_Battery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Калории.
        /// </summary>
        public static string WidgetName_Calories {
            get {
                return ResourceManager.GetString("WidgetName_Calories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Дата.
        /// </summary>
        public static string WidgetName_Date {
            get {
                return ResourceManager.GetString("WidgetName_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь.
        /// </summary>
        public static string WidgetName_Distance {
            get {
                return ResourceManager.GetString("WidgetName_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Жиросжигание.
        /// </summary>
        public static string WidgetName_FatBurning {
            get {
                return ResourceManager.GetString("WidgetName_FatBurning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пульс.
        /// </summary>
        public static string WidgetName_HeartRate {
            get {
                return ResourceManager.GetString("WidgetName_HeartRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Влажность.
        /// </summary>
        public static string WidgetName_Humidity {
            get {
                return ResourceManager.GetString("WidgetName_Humidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PAI.
        /// </summary>
        public static string WidgetName_PAI {
            get {
                return ResourceManager.GetString("WidgetName_PAI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Разминка.
        /// </summary>
        public static string WidgetName_StandUp {
            get {
                return ResourceManager.GetString("WidgetName_StandUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Шаги.
        /// </summary>
        public static string WidgetName_Steps {
            get {
                return ResourceManager.GetString("WidgetName_Steps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Уровень стресса.
        /// </summary>
        public static string WidgetName_Stress {
            get {
                return ResourceManager.GetString("WidgetName_Stress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Восход.
        /// </summary>
        public static string WidgetName_Sunrise {
            get {
                return ResourceManager.GetString("WidgetName_Sunrise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на УФ индекс.
        /// </summary>
        public static string WidgetName_UVindex {
            get {
                return ResourceManager.GetString("WidgetName_UVindex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Погода.
        /// </summary>
        public static string WidgetName_Weather {
            get {
                return ResourceManager.GetString("WidgetName_Weather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ветер.
        /// </summary>
        public static string WidgetName_WindForce {
            get {
                return ResourceManager.GetString("WidgetName_WindForce", resourceCulture);
            }
        }
    }
}
